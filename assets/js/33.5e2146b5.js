(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{312:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),t("p",[a._v("需要实现的功能是，打开 http://a.b.c.d 可以访问服务器上的某个目录。而且，在第一次登录及登录过期时会进行登录，登录成功后才可以访问到目录。")]),a._v(" "),t("h1",{attrs:{id:"开启目录浏览功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开启目录浏览功能"}},[a._v("#")]),a._v(" 开启目录浏览功能")]),a._v(" "),t("p",[a._v("使用 "),t("strong",[a._v("autoindex")]),a._v(" 指令可以开启目录浏览功能。"),t("br"),a._v("\n不仅要设置autoindex，还必须要设置root或alias。")]),a._v(" "),t("h2",{attrs:{id:"访问-时-根目录开启目录浏览"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问-时-根目录开启目录浏览"}},[a._v("#")]),a._v(" 访问 / 时，根目录开启目录浏览")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("localtion / { \n    root /; \n    autoindex on; \n}\n")])])]),t("h2",{attrs:{id:"访问存在的path时-该子目录开启目录浏览"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问存在的path时-该子目录开启目录浏览"}},[a._v("#")]),a._v(" 访问存在的path时，该子目录开启目录浏览")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("location /a/ { \n    root /; \n    autoindex on; \n}\n")])])]),t("h2",{attrs:{id:"访问不存在的path时-某个子目录开启目录浏览功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问不存在的path时-某个子目录开启目录浏览功能"}},[a._v("#")]),a._v(" 访问不存在的path时，某个子目录开启目录浏览功能")]),a._v(" "),t("div",{staticClass:"language-Nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("location")]),a._v(" /x/")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("alias")]),a._v(" /b/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 注意 最后一个/是必需的 ")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("autoindex")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"其他autoindex指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他autoindex指令"}},[a._v("#")]),a._v(" 其他autoindex指令")]),a._v(" "),t("ul",[t("li",[t("p",[t("em",[a._v("autoindex_exact_size")]),a._v(" on | off;：控制是否显示文件的精确大小。默认为 on。")])]),a._v(" "),t("li",[t("p",[t("em",[a._v("autoindex_format html")]),a._v(" | xml | json | jsonp;：指定目录列表的格式。默认为 html。")])]),a._v(" "),t("li",[t("p",[t("em",[a._v("autoindex_localtime")]),a._v(" on | off;：控制是否显示文件的最后修改时间为本地时间。默认为 off。")])])]),a._v(" "),t("h1",{attrs:{id:"root和alias的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#root和alias的区别"}},[a._v("#")]),a._v(" root和alias的区别")]),a._v(" "),t("p",[a._v("相同点：都用于指定请求的文件在文件系统中的位置。")]),a._v(" "),t("p",[a._v("不同点：")]),a._v(" "),t("p",[a._v("第一，root 可以在 http、server 或 location 块中使用，alias 只能在 "),t("strong",[a._v("location")]),a._v(" 块中使用。")]),a._v(" "),t("p",[a._v("第二，nginx将uri"),t("strong",[a._v("拼接")]),a._v("在root指定的路径后面，但alias会"),t("strong",[a._v("替代")]),a._v("指定的路径。")]),a._v(" "),t("p",[a._v("举例如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("location /docs/ { \n    root /var/www/html; \n}\n")])])]),t("p",[a._v("匹配到这条规则时，nginx查找的文件是 "),t("em",[a._v("/var/www/html/docs/index.html")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("location /docs/ { \n    alias /var/www/html/; \n}\n")])])]),t("p",[a._v("匹配到这条规则时，nginx查找的文件是 "),t("em",[a._v("/var/www/html/index.html")])]),a._v(" "),t("h1",{attrs:{id:"权限校验"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#权限校验"}},[a._v("#")]),a._v(" 权限校验")]),a._v(" "),t("h2",{attrs:{id:"校验方法一-auth-basic-user-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#校验方法一-auth-basic-user-file"}},[a._v("#")]),a._v(" 校验方法一："),t("strong",[a._v("auth_basic_user_file")])]),a._v(" "),t("p",[a._v("将用户名密码保存在一个文件中，将文件路径添加到配置中。")]),a._v(" "),t("p",[a._v("密码可以通过"),t("a",{attrs:{href:"https://tool.oschina.net/htpasswd",target:"_blank",rel:"noopener noreferrer"}},[a._v("tool-htpasswd"),t("OutboundLink")],1),a._v("生成，windows上加密算法选md5，linux上选crypt。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('location / { \n    root /; \n    autoindex on; \n    auth_basic "Authorized users only"; \n    auth_basic_user_file /pwd/htpasswd; \n}\n')])])]),t("p",[a._v("htpasswd生成的密码的前缀指示了加密方法。nginx会根据密码文件的内容自动识别加密方式。")]),a._v(" "),t("h2",{attrs:{id:"校验方法二-请求自己的登录接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#校验方法二-请求自己的登录接口"}},[a._v("#")]),a._v(" 校验方法二：请求自己的登录接口")]),a._v(" "),t("p",[a._v("具体思路：访问时判断是否有指定cookie，如果没有跳登录，如果有正常访问。登录接口需要能跳转回来。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("location / { \n    if ($cookie_my_cookie = '') { \n        return http://x.x.x.x/login?redirect_url=http://a.b.c.d; \n    } \n    root /; \n    autoindex on; \n}\n")])])]),t("p",[a._v("如果接口不能把token注入到cookie中，而是放在了跳转回来的query参数里，则需要自己注入cookie并且把url里的query清空，如下所示。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("location / { \n    if ($cookie_my_cookie = '') { \n        return http://x.x.x.x/login?redirect_url=http://a.b.c.d/login; \n    } \n    root /; \n    autoindex on; \n} \nlocation /login/ { \n    add_header Set-Cookie \"my_cookie=$args\"; \n    rewrite ^/login(.*) /? permanent; # 注意 /后面的?是必需的 \n}\n")])])]),t("h1",{attrs:{id:"涉及的nginx知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#涉及的nginx知识点"}},[a._v("#")]),a._v(" 涉及的Nginx知识点")]),a._v(" "),t("h2",{attrs:{id:"nginx变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx变量"}},[a._v("#")]),a._v(" nginx变量")]),a._v(" "),t("p",[t("strong",[a._v("$args")]),a._v("：query参数；")]),a._v(" "),t("p",[t("strong",[a._v("$cookie_my_cookie")]),a._v("：cookie中name为my_cookie的值；")]),a._v(" "),t("h2",{attrs:{id:"nginx-if语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-if语句"}},[a._v("#")]),a._v(" nginx if语句")]),a._v(" "),t("p",[a._v("只有if，没有else。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('if ($cookie_my_cookie = "") { \n    # 如果cookie为空，执行下面的操作 \n} \n\nif ($cookie_my_cookie ~* "value") { \n    # 如果cookie包含value，执行下面的操作 \n} \n\nif ($cookie_my_cookie !~* "value") { \n    # 如果cookie不包含value，执行下面的操作 \n}\n')])])]),t("h2",{attrs:{id:"重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[a._v("#")]),a._v(" 重定向")]),a._v(" "),t("h3",{attrs:{id:"return指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#return指令"}},[a._v("#")]),a._v(" return指令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("location /x/ { \n    return 301 http://localhost:8083/abc; \n}\n")])])]),t("p",[a._v("如果访问/x?123，会跳转到/abc。")]),a._v(" "),t("p",[a._v("return不仅可以返回一个url，也可以返回一句话或者一个json。")]),a._v(" "),t("p",[a._v("第一个参数是"),t("strong",[a._v("状态码")]),a._v("，第二个参数是可选的"),t("strong",[a._v("消息体")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('location / { \n    default_type text/html; \n    return 200 "Hello, World!"; \n} \n\nlocation / { \n    default_type application/json; \n    return 200 "{a:1}"; \n}\n')])])]),t("ul",[t("li",[t("p",[a._v("text/plain：适用于返回的文本内容，默认值。")])]),a._v(" "),t("li",[t("p",[a._v("text/html：适用于返回的HTML内容。")])]),a._v(" "),t("li",[t("p",[a._v("application/json：适用于返回的JSON格式内容。")])]),a._v(" "),t("li",[t("p",[a._v("application/xml：适用于返回的XML格式内容。")])]),a._v(" "),t("li",[t("p",[a._v("application/octet-stream：适用于返回的二进制数据。")])])]),a._v(" "),t("h3",{attrs:{id:"rewrite指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rewrite指令"}},[a._v("#")]),a._v(" rewrite指令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("location /x/ { \n    rewrite ^/x(.*) /y? permanent; \n}\n")])])]),t("p",[a._v("如果不加?会保留原来的query参数，加?会不保留。")]),a._v(" "),t("h3",{attrs:{id:"try-files指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#try-files指令"}},[a._v("#")]),a._v(" try_files指令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("location /x/ { \n    try_files $uri$uri/ /index.html; \n}\n")])])]),t("p",[a._v("如果找不到，就返回index.html。")]),a._v(" "),t("p",[t("em",[a._v("$uri")]),a._v("：尝试匹配确切的请求路径。")]),a._v(" "),t("p",[t("em",[a._v("$uri/")]),a._v("：尝试匹配请求路径的目录版本。")]),a._v(" "),t("h1",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),t("h2",{attrs:{id:"nginx命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx命令"}},[a._v("#")]),a._v(" nginx命令")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("start nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动 ")]),a._v("\nnginx "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" reload "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 刷新 ")]),a._v("\nnginx "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" stop "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭 ")]),a._v("\ntasklist /fi "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"imagename eq nginx.exe"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看全部nginx进程 ")]),a._v("\ntaskkill /pid pid /f "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭某个nginx进程 ")]),a._v("\ntaskkill /f /im nginx.exe "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭所有nginx进程")]),a._v("\n")])])]),t("h2",{attrs:{id:"location-a和location-a-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#location-a和location-a-的区别"}},[a._v("#")]),a._v(" location /a和location /a/的区别")]),a._v(" "),t("p",[a._v("location /a匹配/a、/a/、/ab")]),a._v(" "),t("p",[a._v("location /a/匹配/a/、/a/b")]),a._v(" "),t("h2",{attrs:{id:"刷新不生效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#刷新不生效"}},[a._v("#")]),a._v(" 刷新不生效")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("sendfile off;\n")])])]),t("p",[a._v("还可以查看nginx进程是否有很多个，如果是全部关闭再启动。")]),a._v(" "),t("h2",{attrs:{id:"配置本地域名映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置本地域名映射"}},[a._v("#")]),a._v(" 配置本地域名映射")]),a._v(" "),t("p",[a._v("找到"),t("strong",[a._v("hosts")]),a._v("文件，在C:\\Windows\\System32\\drivers\\etc下。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("localhost my.com\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);