(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{321:function(t,n,e){"use strict";e.r(n);var s=e(14),i=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"_1-画板的功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-画板的功能"}},[t._v("#")]),t._v(" 1.画板的功能")]),t._v(" "),n("ul",[n("li",[t._v("修改画笔颜色；")]),t._v(" "),n("li",[t._v("修改画笔粗细；")]),t._v(" "),n("li",[t._v("橡皮擦；")]),t._v(" "),n("li",[t._v("重置画板；")]),t._v(" "),n("li",[t._v("撤销上一步；")]),t._v(" "),n("li",[t._v("保存成图片；")])]),t._v(" "),n("h2",{attrs:{id:"_2-所需知识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-所需知识"}},[t._v("#")]),t._v(" 2.所需知识")]),t._v(" "),n("p",[n("code",[t._v("Element.getBoundingClientRect()")]),t._v(" 方法返回元素的大小及其相对于视口的位置。\n"),n("code",[t._v("ctx.moveTo(x, y)")]),t._v(" 将一个新的子路径的起始点移动到(x，y)坐标\n"),n("code",[t._v("ctx.lineTo(x, y)")]),t._v(" 使用直线连接子路径的终点到x，y坐标")]),t._v(" "),n("h2",{attrs:{id:"_3-一步步实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-一步步实现"}},[t._v("#")]),t._v(" 3.一步步实现")]),t._v(" "),n("h4",{attrs:{id:"第一步-实现基本功能-可以画出来鼠标路径"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一步-实现基本功能-可以画出来鼠标路径"}},[t._v("#")]),t._v(" 第一步，实现基本功能，可以画出来鼠标路径；")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<canvas id=\"myCanvas\" width=\"400\" height=\"400\"></canvas>\n\nclass Board {\n  constructor(id) {\n    this.canvas = document.getElementById(id);\n    this.context = this.canvas.getContext('2d');\n    this.isDrawing = false;\n    this.posX = 0;\n    this.posY = 0;\n    this.init();\n  }\n  init() {\n    const bindDown = this.handleMouseDown.bind(this);\n    const bindMove = this.handleMouseMove.bind(this);\n    this.canvas.addEventListener('mousedown', bindDown);\n    this.canvas.addEventListener('mousemove', bindMove);\n    window.addEventListener('mouseup', () => {\n      this.isDrawing = false;\n    });\n  }\n  handleMouseDown(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.posX = e.clientX - rect.left;\n    this.posY = e.clientY - rect.top;\n    this.isDrawing = true;\n  }\n  handleMouseMove(e) {\n    if (this.isDrawing === true) {\n      const rect = this.canvas.getBoundingClientRect();\n      this.drawLine(this.context, this.posX, this.posY,\n\t\t e.clientX - rect.left, e.clientY - rect.top);\n      this.posX = e.clientX - rect.left;\n      this.posY = e.clientY - rect.top;\n    }\n  }\n  drawLine(context, x1, y1, x2, y2) {\n    context.beginPath();\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n    context.closePath();\n  }\n}\nnew Board('myCanvas');\n")])])]),n("h4",{attrs:{id:"第二步-可以修改画笔颜色"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二步-可以修改画笔颜色"}},[t._v("#")]),t._v(" 第二步，可以修改画笔颜色；")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<input id=\"colorPicker\" type=\"color\" />\n\ndocument.getElementById('colorPicker').addEventListener('change', e => {\n      b.changeColor(e.target.value);\n    })\n    \n    class Board {\n        constructor(id, color = '#000') {\n              this.penColor = color; \n        }  \n        drawLine(context, x1, y1, x2, y2) {\n          context.strokeStyle = this.penColor;          \n        }\n        changeColor(color) {\n        this.penColor = color;\n      }              \n    }\n")])])]),n("h4",{attrs:{id:"第三步-修改画笔粗细"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三步-修改画笔粗细"}},[t._v("#")]),t._v(" 第三步，修改画笔粗细；")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ctx.lineWidth = number;\n")])])]),n("h4",{attrs:{id:"第四步-橡皮擦"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第四步-橡皮擦"}},[t._v("#")]),t._v(" 第四步，橡皮擦；")]),t._v(" "),n("p",[n("code",[t._v("context.globalCompositeOperation = 'destination-out';")]),t._v("\n参照刮刮乐功能。")]),t._v(" "),n("h4",{attrs:{id:"第五步-重置画板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第五步-重置画板"}},[t._v("#")]),t._v(" 第五步，重置画板；")]),t._v(" "),n("p",[n("code",[t._v("context.clearRect(0, 0, width, height);")])]),t._v(" "),n("h4",{attrs:{id:"第六步-撤销上一步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第六步-撤销上一步"}},[t._v("#")]),t._v(" 第六步，撤销上一步；")]),t._v(" "),n("p",[n("code",[t._v("this.canvas.toDataURL()")]),t._v("\n将当前canvas保存为base64的图片，存放在数组中。再设置一个索引，撤销/恢复修改索引的值，从数组中取出对应的图片。")]),t._v(" "),n("h4",{attrs:{id:"第七步-保存为图片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第七步-保存为图片"}},[t._v("#")]),t._v(" 第七步，保存为图片；")]),t._v(" "),n("p",[t._v("创建一个a标签，href为toDataURL()生成的图片，模拟点击事件，点击a链接。")]),t._v(" "),n("h3",{attrs:{id:"_4-完整代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-完整代码"}},[t._v("#")]),t._v(" 4.完整代码")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<div class="opera">\n    <input id="colorPicker" type="color" />\n    <select id="fontsizeSelect">\n      <option value="1">1</option>\n      <option value="2">2</option>\n      <option value="3">3</option>\n      <option value="4">4</option>\n      <option value="5">5</option>\n    </select>\n    <button id="eraser">橡皮擦</button>\n    <button id="reset">重置</button>\n    <button id="revoke">撤销</button>\n    <button id="recover">恢复</button>\n    <button id="saveAsPic">保存为图片</button>\n  </div>\n  <canvas id="myCanvas" width="400" height="400"></canvas>\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" class Board {\n      constructor(id, color = '#000', fontsize = 1) {\n        this.canvas = document.getElementById(id);\n        this.context = this.canvas.getContext('2d');\n        this.isDrawing = false;\n        this.posX = 0;\n        this.posY = 0;\n        this.penColor = color;\n        this.fontsize = fontsize;\n        this.isErasing = false;\n        this.step = 0;\n        this.histroyList = [];\n        this.init();\n      }\n      init() {\n        const bindDown = this.handleMouseDown.bind(this);\n        const bindMove = this.handleMouseMove.bind(this);\n        this.canvas.addEventListener('mousedown', bindDown);\n        this.canvas.addEventListener('mousemove', bindMove);\n        window.addEventListener('mouseup', () => {\n          this.isDrawing = false;\n        });\n        this.canvas.addEventListener('mouseup', () => {\n          this.step++;\n          if (this.step < this.histroyList.length) {\n            this.histroyList.length = this.step;\n          }\n          this.histroyList.push(this.canvas.toDataURL());\n        });\n        this.histroyList.push(this.canvas.toDataURL());\n      }\n      handleMouseDown(e) {\n        const rect = this.canvas.getBoundingClientRect();\n        this.posX = e.clientX - rect.left;\n        this.posY = e.clientY - rect.top;\n        this.isDrawing = true;\n      }\n      handleMouseMove(e) {\n        const rect = this.canvas.getBoundingClientRect();\n        if (this.isErasing) {\n          this.context.globalCompositeOperation = 'destination-out';\n          this.context.beginPath();\n          this.context.arc(e.clientX - rect.left, e.clientY - rect.top,\n\t\t\t 10, 0, Math.PI * 2);\n          this.context.fill();\n        } else if (this.isDrawing === true) {\n          this.drawLine(this.context, this.posX, this.posY,\n\t\t e.clientX - rect.left, e.clientY - rect.top);\n          this.posX = e.clientX - rect.left;\n          this.posY = e.clientY - rect.top;\n        }\n      }\n      drawLine(context, x1, y1, x2, y2) {\n        context.beginPath();\n        context.strokeStyle = this.penColor;\n        context.lineWidth = this.fontsize;\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n        context.closePath();\n      }\n      changeColor(color) {\n        this.penColor = color;\n      }\n      changeFontSize(size) {\n        this.fontsize = size;\n      }\n      switchEraseStatus() {\n        this.isErasing = !this.isErasing;\n      }\n      clearBoard() {\n        this.context.clearRect(0, 0, window.myCanvas.width,\n\t window.myCanvas.height);\n        this.step = 0;\n        this.histroyList = [];\n      }\n      revoke() {\n        if (this.step > 0) {\n          this.step--;\n          this.context.clearRect(0, 0, window.myCanvas.width, \n\t\twindow.myCanvas.height);\n          let pic = new Image();\n          pic.src = this.histroyList[this.step];\n          pic.addEventListener('load', () => {\n            this.context.drawImage(pic, 0, 0);\n          })\n        } else {\n          console.log('不能继续撤销了')\n        }\n      }\n      recover() {\n        if (this.step < this.histroyList.length - 1) {\n          this.step++;\n          this.context.clearRect(0, 0, window.myCanvas.width,\n       window.myCanvas.height);\n          let pic = new Image();\n          pic.src = this.histroyList[this.step];\n          pic.addEventListener('load', () => {\n            this.context.drawImage(pic, 0, 0);\n          })\n        } else {\n          console.log('不能继续恢复了')\n        }\n      }\n      saveAsPic() {\n        const el = document.createElement('a');\n        el.href = this.canvas.toDataURL();\n        el.download = 'canvas';\n        const event = new MouseEvent('click');\n        el.dispatchEvent(event);\n      }\n    }\n    const b = new Board('myCanvas');\n\n\n    window.colorPicker.addEventListener('change', e => {\n      b.changeColor(e.target.value);\n    })\n\n\n    window.fontsizeSelect.addEventListener('change', e => {\n      b.changeFontSize(window.fontsizeSelect.value);\n    })\n\n\n    window.eraser.addEventListener('click', () => {\n      b.switchEraseStatus();\n    })\n\n\n    window.reset.addEventListener('click', () => {\n      b.clearBoard();\n    })\n\n\n    window.revoke.addEventListener('click', () => {\n      b.revoke();\n    })\n\n\n    window.recover.addEventListener('click', () => {\n      b.recover();\n    })\n\n\n    window.saveAsPic.addEventListener('click', () => {\n      b.saveAsPic();\n    })\n")])])])])}),[],!1,null,null,null);n.default=i.exports}}]);